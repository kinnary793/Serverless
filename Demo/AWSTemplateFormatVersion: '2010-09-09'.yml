AWSTemplateFormatVersion: '2010-09-09'
Description: Serverless Architecture for performing CURD operation in DynamoDB via
  Lambda and Api-Gateway.
Transform: AWS::Serverless-2016-10-31
Parameters:
  dynamoDBCURDWithApiGatewayFunctionArn:
    Type: String
    Description: SNS Topic for cloudwatch alarms
Resources:
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      ApiKeySourceType: HEADER
      Description: An API Gateway with a Lambda Integration
      Name: curd-api
  GetItemsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
        - ApiGatewayRestApi
        - RootResourceId
      PathPart: getitems
      RestApiId:
        Ref: ApiGatewayRestApi
  GetItemsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResourceId:
        Ref: GetItemsResource
      HttpMethod: GET
      AuthorizationType: NONE
      RequestParameters:
        method.request.querystring.fileName: true
      ApiKeyRequired: false
      Integration:
        Credentials:
          Fn::GetAtt:
          - ApiGatewayIamRole
          - Arn
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        RequestParameters:
          integration.request.querystring.fileName: method.request.querystring.fileName
        Uri:
          Fn::Sub:
          - arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn:
              Ref: dynamoDBCURDWithApiGatewayFunctionArn
  GetItemResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: GetItemsResource
      PathPart: '{id}'
      RestApiId:
        Ref: ApiGatewayRestApi
  GetItemMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ResourceId:
        Ref: GetItemResource
      RestApiId:
        Ref: ApiGatewayRestApi
      ApiKeyRequired: false
      AuthorizationType: NONE
      RequestParameters:
        method.request.querystring.fileName: true
      HttpMethod: GET
      Integration:
        Credentials:
          Fn::GetAtt:
          - ApiGatewayIamRole
          - Arn
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        RequestParameters:
          integration.request.querystring.fileName: method.request.querystring.fileName
        Uri:
          Fn::Sub:
          - arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn:
              Ref: dynamoDBCURDWithApiGatewayFunctionArn
  AddItemResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
        - ApiGatewayRestApi
        - RootResourceId
      PathPart: additem
      RestApiId:
        Ref: ApiGatewayRestApi
  AddItemMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ResourceId:
        Ref: AddItemResource
      RestApiId:
        Ref: ApiGatewayRestApi
      ApiKeyRequired: false
      AuthorizationType: NONE
      RequestParameters:
        method.request.querystring.fileName: true
      HttpMethod: POST
      Integration:
        Credentials:
          Fn::GetAtt:
          - ApiGatewayIamRole
          - Arn
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        RequestParameters:
          integration.request.querystring.fileName: method.request.querystring.fileName
        Uri:
          Fn::Sub:
          - arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn:
              Ref: dynamoDBCURDWithApiGatewayFunctionArn
  DeleteItemResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
        - ApiGatewayRestApi
        - RootResourceId
      PathPart: deleteitem
      RestApiId:
        Ref: ApiGatewayRestApi
  DeleteItemIdResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: DeleteItemResource
      PathPart: '{id}'
      RestApiId:
        Ref: ApiGatewayRestApi
  DeleteItemMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ResourceId:
        Ref: DeleteItemIdResource
      RestApiId:
        Ref: ApiGatewayRestApi
      ApiKeyRequired: false
      AuthorizationType: NONE
      RequestParameters:
        method.request.querystring.fileName: true
      HttpMethod: DELETE
      Integration:
        Credentials:
          Fn::GetAtt:
          - ApiGatewayIamRole
          - Arn
        Type: AWS_PROXY
        IntegrationHttpMethod: DELETE
        RequestParameters:
          integration.request.querystring.fileName: method.request.querystring.fileName
        Uri:
          Fn::Sub:
          - arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn:
              Ref: dynamoDBCURDWithApiGatewayFunctionArn
  UpdateItemResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
        - ApiGatewayRestApi
        - RootResourceId
      PathPart: updateitem
      RestApiId:
        Ref: ApiGatewayRestApi
  UpdateItemIdResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: UpdateItemResource
      PathPart: '{id}'
      RestApiId:
        Ref: ApiGatewayRestApi
  UpdateItemMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ResourceId:
        Ref: UpdateItemIdResource
      RestApiId:
        Ref: ApiGatewayRestApi
      ApiKeyRequired: false
      AuthorizationType: NONE
      RequestParameters:
        method.request.querystring.fileName: true
      HttpMethod: PUT
      Integration:
        Credentials:
          Fn::GetAtt:
          - ApiGatewayIamRole
          - Arn
        Type: AWS_PROXY
        IntegrationHttpMethod: PUT
        RequestParameters:
          integration.request.querystring.fileName: method.request.querystring.fileName
        Uri:
          Fn::Sub:
          - arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn:
              Ref: dynamoDBCURDWithApiGatewayFunctionArn
  ApiGatewayModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: application/json
      RestApiId:
        Ref: ApiGatewayRestApi
      Schema: {}
  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: ApiGatewayDeployment
      Description: Stage for CURD Operation with Lambda function integration
      RestApiId:
        Ref: ApiGatewayRestApi
      StageName: curd_stage
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
    - GetItemsMethod
    - AddItemResource
    - DeleteItemMethod
    - UpdateItemMethod
    Properties:
      Description: Lambda API Deployment
      RestApiId:
        Ref: ApiGatewayRestApi
  ApiGatewayIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: LambdaAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: lambda:*
            Resource:
              Ref: dynamoDBCURDWithApiGatewayFunctionArn